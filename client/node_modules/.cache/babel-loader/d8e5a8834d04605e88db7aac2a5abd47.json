{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TEJAS\\\\Desktop\\\\bloggers\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport Dashboard from './components/Home';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  const setAuth = bool => {\n    setIsAuthenticated(bool);\n  };\n\n  async function verifyAuth() {\n    try {\n      const response = await fetch(\"http://localhost:5000/auth/verify\", {\n        method: \"GET\",\n        headers: {\n          token: localStorage.token\n        }\n      });\n      const parseRes = await response.json();\n      parseRes === true ? setIsAuthenticated(true) : setIsAuthenticated(false);\n    } catch (err) {\n      console.log(err.message);\n    }\n  }\n\n  useEffect(() => {\n    verifyAuth();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          element: !isAuthenticated ? /*#__PURE__*/_jsxDEV(Login, {\n            setAuth: setAuth\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 61\n          }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 90\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/register\",\n          element: !isAuthenticated ? /*#__PURE__*/_jsxDEV(Register, {\n            setAuth: setAuth\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 69\n          }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 101\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/home\",\n          element: isAuthenticated ? /*#__PURE__*/_jsxDEV(Dashboard, {\n            setAuth: setAuth\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 64\n          }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 97\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"JkS3Meyzlj18m4l86SBr9YDqEkQ=\");\n\n_c = App;\nexport default App; //react router dom and toastifys\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/TEJAS/Desktop/bloggers/client/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","Navigate","Login","Register","Dashboard","App","isAuthenticated","setIsAuthenticated","setAuth","bool","verifyAuth","response","fetch","method","headers","token","localStorage","parseRes","json","err","console","log","message"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAO,WAAP;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,EAAiDC,QAAjD,QAAiE,kBAAjE;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCZ,QAAQ,CAAC,KAAD,CAAtD;;AAEA,QAAMa,OAAO,GAAIC,IAAD,IAAS;AACvBF,IAAAA,kBAAkB,CAACE,IAAD,CAAlB;AACD,GAFD;;AAIA,iBAAeC,UAAf,GAA2B;AACzB,QAAI;AAEF,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAD,EAAsC;AAChEC,QAAAA,MAAM,EAAE,KADwD;AAEhEC,QAAAA,OAAO,EAAE;AAACC,UAAAA,KAAK,EAAGC,YAAY,CAACD;AAAtB;AAFuD,OAAtC,CAA5B;AAKA,YAAME,QAAQ,GAAG,MAAMN,QAAQ,CAACO,IAAT,EAAvB;AAEAD,MAAAA,QAAQ,KAAK,IAAb,GAAoBV,kBAAkB,CAAC,IAAD,CAAtC,GAA+CA,kBAAkB,CAAC,KAAD,CAAjE;AAED,KAXD,CAWE,OAAOY,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB;AACH;AACF;;AAED1B,EAAAA,SAAS,CAAC,MAAK;AACbc,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;AAGA,sBACE;AAAA,2BACE,QAAC,MAAD;AAAA,6BACE,QAAC,MAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,GAAlB;AAAsB,UAAA,OAAO,EAAE,CAACJ,eAAD,gBAAmB,QAAC,KAAD;AAAO,YAAA,OAAO,EAAEE;AAAhB;AAAA;AAAA;AAAA;AAAA,kBAAnB,gBAAgD,QAAC,QAAD;AAAU,YAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAA/E;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,WAAlB;AAA8B,UAAA,OAAO,EAAE,CAACF,eAAD,gBAAmB,QAAC,QAAD;AAAU,YAAA,OAAO,EAAEE;AAAnB;AAAA;AAAA;AAAA;AAAA,kBAAnB,gBAAmD,QAAC,QAAD;AAAU,YAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAA1F;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,OAAlB;AAA0B,UAAA,OAAO,EAAEF,eAAe,gBAAG,QAAC,SAAD;AAAW,YAAA,OAAO,EAAEE;AAApB;AAAA;AAAA;AAAA;AAAA,kBAAH,gBAAoC,QAAC,QAAD;AAAU,YAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAAtF;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAWD;;GAtCQH,G;;KAAAA,G;AAwCT,eAAeA,GAAf,C,CAGA","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport Dashboard from './components/Home';\n\n\nfunction App() {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  const setAuth = (bool) =>{\n    setIsAuthenticated(bool);\n  };\n\n  async function verifyAuth(){\n    try {\n\n      const response = await fetch(\"http://localhost:5000/auth/verify\", {\n        method: \"GET\",\n        headers: {token : localStorage.token}\n      });\n\n      const parseRes = await response.json();\n\n      parseRes === true ? setIsAuthenticated(true) : setIsAuthenticated(false);\n\n    } catch (err) {\n        console.log(err.message);\n    }\n  }\n\n  useEffect(() =>{\n    verifyAuth()\n  }, []);\n  return (\n    <>\n      <Router>\n        <Routes>\n          <Route exact path=\"/\" element={!isAuthenticated ? <Login setAuth={setAuth}/> : <Navigate to=\"/home\"/>}/>\n          <Route exact path=\"/register\" element={!isAuthenticated ? <Register setAuth={setAuth}/> : <Navigate to=\"/\"/>}/>\n          <Route exact path=\"/home\" element={isAuthenticated ? <Dashboard setAuth={setAuth}/> : <Navigate to=\"/\"/>}/>\n        </Routes>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n\n\n//react router dom and toastifys"]},"metadata":{},"sourceType":"module"}